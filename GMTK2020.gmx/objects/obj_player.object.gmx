<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_overlay(true)

///Initialize Variables
grav = 0.5
air_resist = 1.5
max_vsp = 10
hsp = 0
vsp = 0
jumpspeed = 10
dashspeed = 30
movespeed = 4
image_speed = .25;
global.view_border = 300
shooting = false;
dashing = false;
player_health = 3;
iframe = false;
iframe_flashing = false;
iframe_cooldown = 60;
iframe_flash_speed = 4;
show_debug_overlay(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(obj_player.x, obj_player.y, obj_dash);
obj_dash.image_xscale = -1 * image_xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///flash colour
image_blend = c_red
if (iframe = true) {
    alarm[5] = iframe_flash_speed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset colrour
image_blend = -1
if (iframe = true) {
    alarm[6] = iframe_flash_speed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>iframe = false
iframe_flashing = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_playerDash;
dashing = true;
image_index = 0;
alarm[1] = image_number - 1;
image_speed = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_xscale == -1) {
    instance_create(x + 57, y - 1, obj_playerAttack_hitbox)
} else if (image_xscale == 1) {
    instance_create(x - 57, y - 1, obj_playerAttack_hitbox)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shooting = false;
dashing = false;
image_speed = .25;
if (move == 0) {
    sprite_index = spr_playerIdle;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_playerAttack;
shooting = true;
image_index = 0;
alarm[1] = image_number - 1;
image_speed = 1;

//hitbox alarm
alarm[2] = 7
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// inputs
key_right = keyboard_check(ord("D"))
key_left = -keyboard_check(ord("A"))
key_up = keyboard_check(ord("W"))
key_down = keyboard_check(ord("S"))
key_temp_rightdash = keyboard_check(ord("P"))
key_temp_leftdash = -keyboard_check(ord("O"))


move = key_left + key_right
if (move &gt; 0) {
    image_xscale = -1;
} else if (move &lt; 0) {
    image_xscale = 1;
}
if (move != 0 &amp;&amp; sprite_index != spr_playerWalk &amp;&amp; !shooting &amp;&amp; !dashing) {
    sprite_index = spr_playerWalk;
} else if (move == 0 &amp;&amp; sprite_index != spr_playerIdle &amp;&amp; !shooting &amp;&amp; !dashing){
    sprite_index = spr_playerIdle;
}

if (abs(hsp) &lt;= movespeed) {
    hsp = move * movespeed
} else {
    // air resist
    if (hsp &gt; 0) {
        hsp -= air_resist
    } else if (hsp &lt; 0) {
        hsp += air_resist
    }
}

// gravity
if (vsp &lt; max_vsp) {
    vsp += grav
}

// jump
if (place_meeting(x, y + 1, obj_wall) &amp;&amp; (key_up == 1)) {
    vsp = key_up * -jumpspeed
    instance_create(x, y + 32, obj_jump);
}

    
// temp rightdash
if (key_temp_rightdash = 1) {
    hsp = key_temp_rightdash * dashspeed
}

// temp leftdash
if (key_temp_leftdash = -1) {
    hsp = key_temp_leftdash * dashspeed
}

// horizontal collision
if (place_meeting(x + hsp, y, obj_wall)) {
    while (!place_meeting(x + sign(hsp), y, obj_wall)) {
        x += sign(hsp);
    }
    hsp = 0
}
x += hsp

// vertical collision
if (place_meeting(x, y + vsp, obj_wall)) {
    while (!place_meeting(x, y + sign(vsp), obj_wall)) {
        y += sign(vsp);
    }
    vsp = 0
} else if (!shooting &amp;&amp; !dashing){
    sprite_index = spr_playerJump;
}
y += vsp



// update view
// left collision
if(x - view_xview[0] &lt; global.view_border) {
    view_xview[0] = x - global.view_border
}
//right collision
if(x + global.view_border &gt; view_xview[0] + view_wview[0]) {
    view_xview[0] = x - (view_wview[0] - global.view_border)
}
//top collision
if(y - view_yview[0] &lt; global.view_border) {
    view_yview[0] = y - global.view_border
}
//bottom collision
if(y + global.view_border &gt; view_yview[0] + view_hview[0]) {
    view_yview[0] = y - (view_hview[0] - global.view_border)
}

//bounds check
if(view_xview[0] &lt; 0) {
    view_xview[0] = 0
}
if(view_xview[0] + view_wview[0] &gt; room_width) {
    view_xview[0] = room_width - view_wview[0]
}
if(view_yview[0] &lt; 0) {
    view_yview[0] = 0
}
if(view_yview[0] + view_hview[0] &gt; room_height) {
    view_yview[0] = room_height - view_hview[0]
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (iframe == false) {
    iframe = true
    alarm[4] = iframe_cooldown
    player_health -= 1
    
    image_blend = c_red
    alarm[5] = iframe_flash_speed
    
    //test
    show_debug_message("lost 1 health")
    
    if (player_health == 0) {
        room_restart()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
